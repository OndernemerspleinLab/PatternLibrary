/* GRID */

$maxWidth: 60rem; //1080px
$space: 2rem;

.layoutContainer {
	max-width: $maxWidth;

	margin: {
		left: auto;
		right: auto;
	};

    border-left: solid transparent;
    border-left-width: $menuBarWidthSmall;
    max-width: $maxWidth;
	padding: 0 0.2rem;

	@include setPropWithMq(greater, padding, (
		all: 0 0.2rem,
		extraSmall: 0 3%,
		small: 0 1.6rem,
		mediumLarge: 0 1rem,
		extraLarge: 0 1.6rem
	));

	@include mqGreaterThan(small) {
	    border-left-width: $menuBarWidthLarge;
	}

	&--fullWidth {
		max-width: none;
	}
}

.gridContainer {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	justify-content: flex-start;
	align-items: flex-start;

	&--stretchItems {
		align-items: stretch;
	}
	&--alignItemsToEnd {
		align-items: flex-end;
	}
	&--centerItems {
		justify-content: center;
	}
	&--spaceBetweenItems {
		justify-content: space-between;
	}
	&--singleLine {
		flex-wrap: nowrap;
	}
}


.column {
	margin: 0 $space/2;
	//flex: 1 1 100%;
	flex: 0 1 auto; // default

	&--fit {
		flex: 1 1 auto;
	}

	&--full {
		flex-basis: 100%;
	}

	&--half {
		@include setPropWithMq(greater, flex-basis, (
			all: 100%,
			smallMedium: calc(50% - #{$space}),
		));
	}

	&--quarter {
		@include setPropWithMq(greater, flex-basis, (
			all: calc(50% - #{$space}),
			smallMedium: calc(#{100%*1/3} - #{$space}),
			mediumLarge: calc(25% - #{$space})
		));
	}

	&--threeQuarter {
		@include setPropWithMq(greater, flex-basis, (
			all: 100%,
			smallMedium: calc(#{100%*2/3} - #{$space}),
			mediumLarge: calc(75% - #{$space})
		));
	}

	&--third {
		@include setPropWithMq(greater, flex-basis, (
			all: 100%,
			smallMedium: calc(#{100%*1/2} - #{$space}),
			mediumLarge: calc(#{100%*1/3} - #{$space})
		));
	}

	&--twoThird {
		@include setPropWithMq(greater, flex-basis, (
			all: 100%,
			mediumLarge: calc(#{100%*2/3} - #{$space})
		));
	}
}