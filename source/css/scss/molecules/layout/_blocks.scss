/* BLOCKS */

.blockContainer {
	display: flex;
	flex-direction: column;
	margin: {
		top: $space/2;
		bottom: $space/2;
	}


	&-more {
		$baseThemeClass: #{&};
		font-size: getFontSize(small);
		line-height: 1;
		flex: 0 0 auto;
		padding: 0 $space/2 $space/2 $space/2;

		background-color: getColor(grijs lightest);
		// CRS Container
		.crs-wrapper & {
			background-color: getColor(wit);
		}

		@include before("") {
			display: block;
			border-top: 1px solid getColor(grijs light);
			height: 0.5rem;
		}

		.interfaceLink {
			color: getColor(grijs darkest);
		}

		@at-root {
			.interfaceLink {
				@include theme((fill: foreground), $baseThemeClass);

				@include hoverEtc {
					@include theme((fill: foreground, color: foreground), $baseThemeClass);
				}
			}
		}
	}
}

%block {
	display: flex;
	flex-direction: column;
	min-height: 16rem;
	position: relative;
	flex: 1 0 auto;

	background-color: getColor(grijs lightest);
	// CRS Container
	.crs-wrapper & {
		background-color: getColor(wit);
	}

}

.listBlock {
	$baseThemeClass: ".listBlock";

	@extend %block;
	@include insideMargin($space/2);
	padding: 0 $space/2;

	&-title {
		font-weight: normal;
		margin-top: 0;

		@include theme((color: foreground), $baseThemeClass);
	}

	&-icon {
		height: 1.35rem;
		width: 1.35rem;
		margin-right: 0.5rem;

		@include theme((fill: foreground), $baseThemeClass);
	}

	&-list {
		font-size: getFontSize(small);
	}


	.interfaceLink {
		color: getColor(grijs darkest);
	}

	// At root is used to remove extranious .listBlock class
	@at-root {
		.interfaceLink {
			@include theme((fill: foreground), $baseThemeClass);

			@include hoverEtc {
				@include theme((fill: foreground, color: foreground), $baseThemeClass);
			}
		}
	}
}
.promoBlock {
	$baseThemeClass: ".promoBlock";
	cursor: pointer;

	@include noUnderline;
	@extend %block;
	transition: transform 0.2s;
	transform-origin: 50% 100%;


	@include hoverEtc {
		transform: scale(1.025);
		@include theme((color: foreground), $baseThemeClass, true);
		.promoBlock-title {
			color: inherit;
		}
	}


	&-figure {
		margin: 0;
		position: relative;
	}

	&-image {
		margin: 0;
	}

	&-content {
		@include insideMargin($space/2);
		padding: 0 $space/2;

	}

	&-title {
		margin-top: 0;
	}


	&-label {
		position: absolute;
		bottom: 0.75em;
		right: -0.25em;
		padding: 0.25em 0.75em;
		font-size: getFontSize(small);
		color: getColor(wit);
		background-color: getColor(hemelblauw default);
		@include theme((background-color: foreground), $baseThemeClass);
	}
}

.block {

	// Right Column
	&--side {
		margin-top: 0;
		margin-bottom: 1.5em;
		border-bottom: 4px solid getColor(grijs border);
		padding-bottom: 0.5em;
		padding-left: 0;

		&:last-child {
			border-bottom: none;
		}
	}

	&--grey {
		background-color: getColor(grijs lightest);
	}

	&--blue {
		background-color: getColor(hemelblauw lightest);
	}

}



.postTitle {
	font-weight: bold;
	display: block;
}

.postDate {
	font-weight: normal;
	font-style: italic;
	font-size: getFontSize(extrasmall);
}

.crs-wrapper {
	background-color: getColor(grijs lightest);
}