/* LINKS */

// Add underline
@mixin underline {
	text-decoration: none;
	border-bottom: 1px solid;
}

// Undo underline
@mixin noUnderline {
	text-decoration: none;
	border-bottom: none;
}

// Hide underline without changing the dimensions relative
// to an underlined link
@mixin hideUnderline {
	text-decoration: none;
	border-bottom: 1px solid transparent;
}

a {
	color: inherit;
	@include underline;
	transition: color, fill 400ms;

	&:hover,
	&:focus,
	&:active {
		color: getColor(hemelblauw default);
	}

}

h2, h3, h4, h5, h6 {
	a {
		@include noUnderline;
		&:hover,
		&:focus,
		&:active {
			@include underline;
		}
	}
}


.interfaceLink {
	$lineHeight: 1.6;

	@at-root {
		&,
		.interfaceLinkStatic {
			@include noUnderline;
			color: getColor(hemelblauw default);
			fill: getColor(hemelblauw default);
			line-height: $lineHeight;

			display: inline-flex;
		    align-items: flex-start;
		}
	}

	&-icon {
		flex: 0 0 auto;
		margin-right: 0.3em;
	}
	&-text {
		flex: 1 1 0;
	}

	.underliner {
		@include hideUnderline;
		transition: border-bottom-color 200ms;
	}


	@include hoverEtc {
		.underliner {
			@include underline;
		}
	}

}

.headingLink {
	$lineHeight: 1.2;

	line-height: $lineHeight;
	@include noUnderline;
	color: getColor(hemelblauw default);
	fill: getColor(hemelblauw default);
	display: inline-flex;
    align-items: flex-start;

	.underliner {
		@include hideUnderline;
		transition: border-bottom-color 200ms;
	}


	@include hoverEtc {
		@include noUnderline;
		.underliner {
			@include underline;
		}
	}

	&-bigIcon {
		flex: 0 0 auto;
		height: ($lineHeight * 1em);
		margin: {
			top: -0.4em;
			bottom: -0.4em;
			right: 0.3em;
		}
		vertical-align: middle;
	}

	&-icon {
		flex: 0 0 auto;
		height: ($lineHeight * 1em);
		margin-left: 0.3em;
		vertical-align: middle;
	}
	&-text {
		flex: 0 1 auto;
		line-height: ($lineHeight * 1em);
	}
}

.externalLink {
	&:after {
		@include icon;
        display: inline-block;
       	content: getIcon(externalLink);
       	@include noUnderline;
    }
}