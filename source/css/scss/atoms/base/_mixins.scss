// MIXINS

// ACCESSIBILITY
// Places an item out of sight while keeping it available for screenreaders.
// Focusable elements such as links and inputs are placed back in sight on focus,
// for keyboard users.
@mixin accHide {
	position:absolute;
	left:-999em;
	top:0;
	height: 1px;
	overflow: hidden;
	&:focus {
		left:1em;
		height: auto;
	}
}

// Undo accHide
@mixin accShow {
	position:relative;
	left:0;
	top:0;
	height: auto;
	&:focus {
		left:0;
	}
}

// Visually hide text but still keep it available for screen readers
// usefull for image replacement techniques
@mixin hideText {
	text-indent: 100%;
	white-space: nowrap;
	overflow:hidden;
}

// Undo hideText
@mixin showText {
	text-indent:0;
	white-space:normal;
	overflow:auto;
}

// Convenience mixin for before pseudo element
@mixin before($content: null) {
	&:before {
		@if ($content != null) {
			content: quote($content);
		}
		@content;
	}
}

// Convenience mixin for after pseudo element
@mixin after($content: null) {
	&:after {
		@if ($content != null) {
			content: quote($content);
		}
		@content;
	}
}

// Mixin for hover, focus and active so
// focus and active are not forgotten
@mixin hoverEtc {
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}


// Give a list space around it
@mixin listSpacing {
	padding-left: 1rem;
	margin-bottom: 1rem;

	@include mqGreaterThan(smallMedium) {
		padding-left: 0;
	}
}

// Undo listSacing
@mixin noListSpacing {
	padding-left: 0;
	margin-bottom: 0;
}

// Add bullets to a list
@mixin bullets($type: disc) {
	@include listSpacing;
	//list-style: $type;
	counter-reset: li;
	li {
		list-style-type: none;
	    counter-increment: li;
	    position: relative;

	    &:before {
	    	speak: none;
	    	content: "•";
			position: absolute;
			left: -2.5em;
			width: 2em;
			text-align: right;
			color: getColor(hemelblauw darkest);
			font-weight: bold;
	    }

	    ul li {
    		ol li {
	    		&:before {
	    			content: counter(li,decimal) ".";
	    		}
    		}
    	}
    	ol li {
    		&:before {
    			content: counter(li,decimal) ".";
    		}
		}
	}
}

// Undo bullets
@mixin noBullets {
	@include noListSpacing;
	list-style: none;
	li {
		&:before {
			content: "";
			position: relative;
			display: none;
		}
	}
}

// Add numbers to a list
@mixin numbers($type: decimal) {
	@include listSpacing;
	//list-style: $type;
	counter-reset: li;
	li {
		list-style-type: none;
	    counter-increment: li;
	    position: relative;

	    &:before {
	    	content: counter(li) ".";
			position: absolute;
			left: -2.5em;
			width: 2em;
			text-align: right;
			color: getColor(hemelblauw darkest);
			font-weight: bold;
	    }

	    ol li {
    		ul li {
    			&:before {
    				content: "•";
    			}
    		}
    	}
    	ul li {
			&:before {
				content: "•";
			}
			ol li {
	    		&:before {
	    			content: counter(li,decimal) ".";
	    		}
			}
		}
	}
}

// Undo numbers
@mixin noNumbers {
	@include noListSpacing;
	list-style: none;
	li {
		&:before {
			content: "";
			position: relative;
			display: none;
		}
	}
}