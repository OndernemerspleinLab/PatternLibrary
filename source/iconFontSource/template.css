/* Generated by grunt-webfont */

<% if (fontfaceStyles) { %>@font-face {
	font-family: "<%= fontBaseName %>";<% if (fontSrc1) { %>
	src: <%= fontSrc1 %>;<% }%>
	src: <%= fontSrc2 %>;
	font-weight: bold;
	font-style: normal;
}
<% } %>
<% if (baseStyles) { %>@mixin <%= baseClass %> {
	display: inline;
	font-family: "<%= fontBaseName %>";
	font-weight: normal;
	font-style: normal;
	speak: none;
	text-decoration: none;
	text-transform: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	line-height: 1.25;
}
<% } %>

<%
function loopBreakPoints(breakpoints, callback) {
	_(breakpoints).each(function (breakpointType, breakpointTypeName) {
		_(breakpointType.breakpoints).each(function (breakpoint) {
			callback(camelCaseToHyphen(breakpointTypeName), breakpoint.name);
		});
	});
}


function camelCaseToHyphen(str) {
	var strArray = str.split(""),
		upperCaseRegex = /[A-Z]/;

	strArray.forEach(function (character, i) {
		if (i > 1 && character.match(upperCaseRegex)) {
			strArray[i] = character.toLowerCase();
			if (strArray[i - 1] !== "-" && strArray[i - 1] !== "_") {
				strArray[i] = "-" + strArray[i];
			}
		}
	});

	return strArray.join("");
}
%>

%<%= baseClass %> {
	@include <%= baseClass %>;
}

<% loopBreakPoints(breakpoints, function (breakpointTypeName, breakpointName) { %>
%<%= breakpointTypeName %>_<%= breakpointName %>_<%= baseClass %> {
	@include mq-<%= breakpointTypeName %>(<%= breakpointName %>) {
		@include <%= baseClass %>;
	};
}
<% }); %>

/* Icons */

<% _(glyphs).each(function (glyph, glyphIdx) {%>
@mixin <%= classPrefix %><%= glyph %> {
	content:"\<%= codepoints[glyphIdx] %>";
}

%<%= classPrefix %><%= glyph %> {
	@extend %<%= baseClass %> !optional;
	@include <%= classPrefix %><%= glyph %>;
}
	<% loopBreakPoints(breakpoints, function (breakpointTypeName, breakpointName) { %>
%<%= breakpointTypeName %>_<%= breakpointName %>_<%= classPrefix %><%= glyph %> {
	@extend %<%= breakpointTypeName %>_<%= breakpointName %>_<%= baseClass %> !optional;
	@include mq-<%= breakpointTypeName %>(<%= breakpointName %>) {
		@include <%= classPrefix %><%= glyph %>;
	};
}
	<% }); %>
<% }); %>